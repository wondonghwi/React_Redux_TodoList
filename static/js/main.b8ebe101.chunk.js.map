{"version":3,"sources":["modules/todos.js","components/TodoTemplate.js","components/TodoInsert.js","components/TodoList.js","TodosContainer.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","nextId","initialState","id","text","checked","TodoTemplate","children","className","React","memo","TodoInsert","onCreate","useState","setText","handleRef","useRef","handlePlus","useCallback","current","focus","handleKeyPress","e","key","type","onChange","target","value","onKeyPress","ref","placeholder","onClick","TodoList","todos","onRemove","onToggle","todoList","map","todo","cn","TodosContainer","useSelector","state","dispatch","useDispatch","addTodo","removeTodo","toggleTodo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","produce","draft","push","find","splice","findIndex","store","createStore","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGMA,EAAW,iBACXC,EAAc,oBACdC,EAAc,oBAEhBC,EAAS,EAoBPC,EAAe,CACnB,CACEC,GAAI,EACJC,KAAM,QACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,aACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,OACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,SACNC,SAAS,I,UC3CPC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SACtB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,sCACA,qBAAKA,UAAU,UAAf,SAA0BD,QAKjBE,MAAMC,KAAKJ,G,wBCRpBK,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAETC,mBAAS,IAFA,mBAE1BT,EAF0B,KAEpBU,EAFoB,KAI3BC,EAAYC,iBAAO,MAMnBC,EAAaC,uBAAY,WAC7BN,EAASR,GACTU,EAAQ,IACRC,EAAUI,QAAQC,UACjB,CAACR,EAAUR,IAERiB,EAAiBH,uBAAY,SAACI,GACpB,UAAVA,EAAEC,KACJN,MAED,CAACA,IAEJ,OACE,sBAAKT,UAAU,aAAf,UACE,uBAAOgB,KAAK,OACLC,SAnBU,SAACH,GACpBR,EAAQQ,EAAEI,OAAOC,QAmBRA,MAAOvB,EACPwB,WAAYP,EACZQ,IAAKd,EACLe,YAAY,8BAEnB,wBAAQC,QAASd,EAAjB,SACE,cAAC,IAAD,UAMOR,MAAMC,KAAKC,G,yBCrCpBqB,EAAW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE5BC,EAAWlB,uBAAY,WAC3B,OAAOe,EAAMI,KAAI,SAAAC,GAAI,OACnB,sBAAK9B,UAAU,WAAf,UACE,sBAAKA,UAAW+B,IAAG,WAAY,CAAClC,QAASiC,EAAKjC,UAAW0B,QAAS,kBAAMI,EAASG,EAAKnC,KAAtF,UACGmC,EAAKjC,QAAU,cAAC,IAAD,IAAgB,cAAC,IAAD,IAChC,qBAAKG,UAAU,OAAf,SAAuB8B,EAAKlC,UAE9B,qBAAKI,UAAU,SAASuB,QAAS,kBAAMG,EAASI,EAAKnC,KAArD,SACE,cAAC,IAAD,QAN2BmC,EAAKnC,SAUrC,CAAC+B,EAAUC,EAAUF,IAExB,OACE,mCACGG,OAKQ3B,MAAMC,KAAKsB,GCOXQ,EA5BQ,WAErB,IAAMP,EAAQQ,aAAY,SAAAC,GAAK,OAAIA,EAAMT,SAEnCU,EAAWC,cAEXhC,EAAWM,uBAAY,SAACd,GAC5BuC,EJJmB,SAAAvC,GAAI,MAAK,CAC9BoB,KAAM1B,EACNwC,KAAM,CACJnC,GAAIF,IACJG,SIASyC,CAAQzC,MAChB,CAACuC,IAEET,EAAWhB,uBAAY,SAACf,GAC5BwC,EJDsB,SAAAxC,GAAE,MAAK,CAC/BqB,KAAMzB,EACNI,MIDW2C,CAAW3C,MACnB,CAACwC,IAEER,EAAWjB,uBAAY,SAACf,GAC5BwC,EJDsB,SAAAxC,GAAE,MAAK,CAC/BqB,KAAMxB,EACNG,MIDW4C,CAAW5C,MACnB,CAACwC,IAEJ,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAY/B,SAAUA,IACtB,cAAC,EAAD,CAAUqB,MAAOA,EAAOC,SAAUA,EAAUC,SAAUA,UClB/Ca,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCACQ,EAJKC,0BAAgB,CAClC1B,MP+Ca,WAA8C,IAA/BS,EAA8B,uDAAtBxC,EAAc0D,EAAQ,uCAC1D,OAAQA,EAAOpC,MACb,KAAK1B,EACH,OAAO+D,YAAQnB,GAAO,SAAAoB,GACpBA,EAAMC,KAAKH,EAAOtB,SAEtB,KAAKtC,EACH,OAAO6D,YAAQnB,GAAO,SAAAoB,GACpB,IAAMxB,EAAOwB,EAAME,MAAK,SAAA/B,GAAK,OAAIA,EAAM9B,KAAOyD,EAAOzD,MACrDmC,EAAKjC,SAAWiC,EAAKjC,WAEzB,KAAKN,EACH,OAAO8D,YAAQnB,GAAO,SAAAoB,GACpBA,EAAMG,OAAOH,EAAMI,WAAU,SAAA5B,GAAI,OAAIA,EAAKnC,KAAOyD,EAAOzD,MAAK,MAEjE,QACE,OAAOuC,M,QQzDPyB,EAAQC,sBAAYV,EAAcW,iCACxCC,QAAQC,IAAIJ,EAAMK,YAElBC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAMQ,WAAP,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1B5B,M","file":"static/js/main.b8ebe101.chunk.js","sourcesContent":["//액션타입\r\nimport { produce } from \"immer\";\r\n\r\nconst ADD_TODO = 'todos/ADD_TODO';\r\nconst REMOVE_TODO = 'todos/REMOVE_TODO';\r\nconst TOGGLE_TODO = 'todos/TOGGLE_TODO';\r\n\r\nlet nextId = 4;\r\n\r\n//액션 함수 선언\r\nexport const addTodo = text => ({\r\n  type: ADD_TODO,\r\n  todo: {\r\n    id: nextId++, //id값이 + 된 이후에 id + 1\r\n    text\r\n  },\r\n});\r\nexport const removeTodo = id => ({\r\n  type: REMOVE_TODO,\r\n  id,\r\n});\r\nexport const toggleTodo = id => ({\r\n  type: TOGGLE_TODO,\r\n  id,\r\n});\r\n\r\n//초기 상태 선언\r\nconst initialState = [\r\n  {\r\n    id: 1,\r\n    text: 'redux',\r\n    checked: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: 'contextApi',\r\n    checked: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: 'mobX',\r\n    checked: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    text: 'recoil',\r\n    checked: false,\r\n  },\r\n];\r\n\r\n//리듀서 생성\r\nexport default function todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO :\r\n      return produce(state, draft => {\r\n        draft.push(action.todo);\r\n      })\r\n    case TOGGLE_TODO:\r\n      return produce(state, draft => {\r\n        const todo = draft.find(todos => todos.id === action.id);\r\n        todo.checked = !todo.checked;\r\n      })\r\n    case REMOVE_TODO:\r\n      return produce(state, draft => {\r\n        draft.splice(draft.findIndex(todo => todo.id === action.id), 1);\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../scss/TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({ children}) => {\r\n  return (\r\n    <div className='TodoTemplate'>\r\n      <div className='app-title'>일정관리</div>\r\n      <div className='content'>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoTemplate);\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport '../scss/TodoInsert.scss';\r\nimport { MdAdd } from \"react-icons/all\";\r\n\r\nconst TodoInsert = ({onCreate}) => {\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const handleRef = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handlePlus = useCallback(() => {\r\n    onCreate(text);\r\n    setText('');\r\n    handleRef.current.focus();\r\n  }, [onCreate, text]);\r\n\r\n  const handleKeyPress = useCallback((e) => {\r\n    if (e.key === 'Enter') {\r\n      handlePlus();\r\n    }\r\n  }, [handlePlus]);\r\n\r\n  return (\r\n    <div className='TodoInsert'>\r\n      <input type=\"text\"\r\n             onChange={handleChange}\r\n             value={text}\r\n             onKeyPress={handleKeyPress}\r\n             ref={handleRef}\r\n             placeholder='할일 입력'\r\n      />\r\n      <button onClick={handlePlus}>\r\n        <MdAdd/>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoInsert);\r\n","import React, { useCallback } from 'react';\r\nimport '../scss/TodoList.scss';\r\nimport cn from 'classnames';\r\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdRemoveCircleOutline } from \"react-icons/all\";\r\n\r\nconst TodoList = ({todos, onRemove, onToggle}) => {\r\n\r\n  const todoList = useCallback(() => {\r\n    return todos.map(todo =>\r\n      <div className='TodoList' key={todo.id}>\r\n        <div className={cn('checkbox', {checked: todo.checked})} onClick={() => onToggle(todo.id)}>\r\n          {todo.checked ? <MdCheckBox/> : <MdCheckBoxOutlineBlank/>}\r\n          <div className='text'>{todo.text}</div>\r\n        </div>\r\n        <div className='remove' onClick={() => onRemove(todo.id)}>\r\n          <MdRemoveCircleOutline/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }, [onRemove, onToggle, todos]);\r\n\r\n  return (\r\n    <>\r\n      {todoList()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo, removeTodo, toggleTodo } from \"./modules/todos\";\r\nimport TodoTemplate from \"./components/TodoTemplate\";\r\nimport TodoInsert from \"./components/TodoInsert\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nconst TodosContainer = () => {\r\n\r\n  const todos = useSelector(state => state.todos);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onCreate = useCallback((text) => {\r\n    dispatch(addTodo(text))\r\n  }, [dispatch]);\r\n\r\n  const onRemove = useCallback((id) => {\r\n    dispatch(removeTodo(id))\r\n  }, [dispatch]);\r\n\r\n  const onToggle = useCallback((id) => {\r\n    dispatch(toggleTodo(id))\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <TodoTemplate>\r\n        <TodoInsert onCreate={onCreate}/>\r\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\r\n      </TodoTemplate>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosContainer;\r\n","import React from 'react';\r\nimport TodosContainer from \"./TodosContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <TodosContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./modules\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(rootReducer , composeWithDevTools());\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}